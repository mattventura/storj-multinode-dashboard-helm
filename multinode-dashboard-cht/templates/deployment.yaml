apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "multinode-dashboard.fullname" . }}
  labels:
    {{- include "multinode-dashboard.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "multinode-dashboard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "multinode-dashboard.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "multinode-dashboard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.setupMode }}
          image: "{{ .Values.setupImage.repository }}:{{ .Values.setupImage.tag }}"
          imagePullPolicy: {{ .Values.setupImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
          - name: multinode-config
            mountPath: /srv/config
          - name: multinode-identity
            mountPath: /srv/identity
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 15002
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: multinode-config
            mountPath: /app/config
          - name: multinode-identity
            mountPath: /app/identity
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        # Config and DB
      - name: multinode-config
        persistentVolumeClaim: 
          claimName: {{ .Values.configPersistence.existingClaim | default (printf "%s-config-pvc" (include "multinode-dashboard.fullname" .)) | quote }}
      - name: multinode-identity
        persistentVolumeClaim: 
          claimName: {{ .Values.identityPersistence.existingClaim | default (printf "%s-identity-pvc" (include "multinode-dashboard.fullname" .)) | quote }}
